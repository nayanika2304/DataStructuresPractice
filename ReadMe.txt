# Difference between python arrays and lists

Python’s arrays are homogenous -
you can only store the same type of values (e.g., only floats) in an array.
Lists are heterogenous - you can store pretty much anything in a list -
the first element could a string, the second an integer, the third a dict, etc.
That’s the big difference.
You can also do different operations with them -
use dir() to find out what methods they support.

PS: If you know that you only need to store the same type of values
and that type is supported by Python’s array type,
use that - it is more memory-efficient.

Python arrays can be operated upon like array/3 but lists cannot

# Hash tables in Python

In Python, the Dictionary data types represent the implementation of hash tables.
The Keys in the dictionary satisfy the following requirements.

The keys of the dictionary are hashable i.e. the are generated by hashing function
which generates unique result for each unique value supplied to the hash function.
The order of data elements in a dictionary is not fixed.

So the search and insertion function of a data element becomes much faster
as the key values themselves
become the index of the array which stores the data.